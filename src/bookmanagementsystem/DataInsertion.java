/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookmanagementsystem;
//importing neccessary class
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import java.util.Scanner;
import javax.swing.BorderFactory;
import javax.swing.border.Border;

/**
 *
 * @author niran
 */
public class DataInsertion extends javax.swing.JFrame {

    /**
     * Creates new form DataInsertion
     */
    public DataInsertion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bookIDs = new javax.swing.JTextField();
        bookNames = new javax.swing.JTextField();
        author = new javax.swing.JTextField();
        prices = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        fiction = new javax.swing.JRadioButton();
        nonFiction = new javax.swing.JRadioButton();
        genres = new javax.swing.JComboBox<>();
        jSlider1 = new javax.swing.JSlider();
        jLabel15 = new javax.swing.JLabel();
        languages = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        yearPublished = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        clear = new javax.swing.JButton();
        add = new javax.swing.JButton();
        display = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        viewRecords = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        searchBooks = new javax.swing.JMenuItem();
        jMenu = new javax.swing.JMenu();
        help = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Insertion for Records");
        setBounds(new java.awt.Rectangle(500, 10, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BookID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 255, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("BookName");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 255, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Author");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 255, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Price");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 255, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Category");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 255, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Genre");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 255, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Language");

        bookIDs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bookIDs.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("")));
        bookIDs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bookIDsFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bookIDsFocusLost(evt);
            }
        });
        bookIDs.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                bookIDsInputMethodTextChanged(evt);
            }
        });
        bookIDs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookIDsActionPerformed(evt);
            }
        });
        bookIDs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bookIDsKeyPressed(evt);
            }
        });

        bookNames.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bookNames.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        bookNames.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bookNamesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bookNamesFocusLost(evt);
            }
        });
        bookNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNamesActionPerformed(evt);
            }
        });
        bookNames.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bookNamesKeyPressed(evt);
            }
        });

        author.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        author.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        author.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                authorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                authorFocusLost(evt);
            }
        });
        author.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                authorKeyPressed(evt);
            }
        });

        prices.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        prices.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        prices.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pricesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pricesFocusLost(evt);
            }
        });
        prices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricesActionPerformed(evt);
            }
        });
        prices.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pricesKeyPressed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 0, 51));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setForeground(new java.awt.Color(255, 0, 51));

        jLabel10.setForeground(new java.awt.Color(255, 0, 51));

        jLabel11.setForeground(new java.awt.Color(255, 0, 51));

        jLabel12.setForeground(new java.awt.Color(255, 0, 51));

        jLabel13.setForeground(new java.awt.Color(255, 0, 51));

        jLabel14.setForeground(new java.awt.Color(255, 0, 51));

        fiction.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(fiction);
        fiction.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fiction.setForeground(new java.awt.Color(51, 255, 0));
        fiction.setText("Fiction");
        fiction.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fiction.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fictionFocusGained(evt);
            }
        });
        fiction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fictionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fictionMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fictionMousePressed(evt);
            }
        });

        nonFiction.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(nonFiction);
        nonFiction.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nonFiction.setForeground(new java.awt.Color(51, 255, 0));
        nonFiction.setText("Non-Fiction");
        nonFiction.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nonFiction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nonFictionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nonFictionMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nonFictionMousePressed(evt);
            }
        });
        nonFiction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonFictionActionPerformed(evt);
            }
        });

        genres.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        genres.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Mystery", "Adventure", "Thriller", "Comedy", "Drama" }));
        genres.setBorder(null);
        genres.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        genres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                genresMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                genresMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                genresMousePressed(evt);
            }
        });

        jSlider1.setBackground(new java.awt.Color(51, 255, 0));
        jSlider1.setForeground(new java.awt.Color(51, 255, 0));
        jSlider1.setMajorTickSpacing(1);
        jSlider1.setMaximum(5);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(0);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider1.setFocusable(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 255, 0));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Rating");

        languages.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        languages.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "English", "Nepali", "Chinese", "French", "Hindi" }));
        languages.setBorder(null);
        languages.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        languages.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                languagesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                languagesMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                languagesMousePressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 255, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("YearPublished");

        yearPublished.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        yearPublished.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010" }));
        yearPublished.setBorder(null);
        yearPublished.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        yearPublished.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                yearPublishedMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                yearPublishedMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                yearPublishedMousePressed(evt);
            }
        });

        jLabel17.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(author, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prices, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookIDs, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(fiction)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nonFiction, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bookNames, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(genres, javax.swing.GroupLayout.Alignment.LEADING, 0, 189, Short.MAX_VALUE)
                            .addComponent(languages, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(yearPublished, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bookIDs, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookNames, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(author, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prices, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fiction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nonFiction))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(genres, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(languages, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(yearPublished, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jSlider1.getAccessibleContext().setAccessibleName("Rating");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        clear.setBackground(new java.awt.Color(0, 0, 0));
        clear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clear.setForeground(new java.awt.Color(51, 255, 0));
        clear.setText("Clear");
        clear.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(0, 0, 0));
        add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(51, 255, 0));
        add.setText("Add");
        add.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        display.setBackground(new java.awt.Color(0, 0, 0));
        display.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        display.setForeground(new java.awt.Color(51, 255, 0));
        display.setText("Display");
        display.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 0));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(51, 51, 51)));
        jMenuBar1.setForeground(new java.awt.Color(0, 255, 0));
        jMenuBar1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jMenuBar1.setName(""); // NOI18N
        jMenuBar1.setOpaque(false);

        jMenu1.setText("File");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        viewRecords.setText("ViewRecords");
        viewRecords.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        viewRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRecordsActionPerformed(evt);
            }
        });
        jMenu1.add(viewRecords);

        Exit.setText("Exit");
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Search");
        jMenu2.setActionCommand("");

        searchBooks.setText("SearchBooks");
        searchBooks.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBooksActionPerformed(evt);
            }
        });
        jMenu2.add(searchBooks);

        jMenuBar1.add(jMenu2);

        jMenu.setText("Help");
        jMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        help.setText("ViewHelp");
        help.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        jMenu.add(help);

        jMenuBar1.add(jMenu);

        jMenu3.setText("X");
        jMenu3.setBorderPainted(true);
        jMenu3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenu3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jMenu3MouseExited(evt);
            }
        });
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //instatiating the jframe
    JFrame frame = new JFrame();
    //Global Variables
    boolean addition = false, idChecker = false;

    //getters method
    private String getBook() {
        String bookID = bookIDs.getText();
        return bookID;
    }

    private int getBookId() {
        int bookID = Integer.parseInt(getBook());
        return bookID;
    }

    private String getBookName() {
        String bookName = bookNames.getText();
        return bookName;
    }

    private String getAuthorName() {
        String authorName = author.getText();
        return authorName;
    }

    private String getBookPrice() {
        String price = prices.getText();
        return price;
    }

    private double getPrice() {
        Double price = Double.parseDouble(getBookPrice());
        return price;
    }

    private String getCategory() {
        String category = "";
        if (fiction.isSelected()) {
            category = fiction.getText();
        }
        if (nonFiction.isSelected()) {
            category = nonFiction.getText();
        }
        return category;
    }

    private String getGenre() {
        String genre = " ";
        switch (genres.getSelectedIndex()) {
            case 1 ->
                genre = (String) genres.getSelectedItem();
            case 2 ->
                genre = (String) genres.getSelectedItem();
            case 3 ->
                genre = (String) genres.getSelectedItem();
            case 4 ->
                genre = (String) genres.getSelectedItem();
            case 0 ->
                genre = (String) genres.getSelectedItem();
            case 5 ->
                genre = (String) genres.getSelectedItem();
            default -> {
            }
        }
        return genre;
    }

    private String getLanguage() {
        String language = " ";
        switch (languages.getSelectedIndex()) {
            case 1 ->
                language = (String) languages.getSelectedItem();
            case 2 ->
                language = (String) languages.getSelectedItem();
            case 3 ->
                language = (String) languages.getSelectedItem();
            case 4 ->
                language = (String) languages.getSelectedItem();
            case 0 ->
                language = (String) languages.getSelectedItem();
            case 5 ->
                language = (String) languages.getSelectedItem();
            default -> {
            }
        }
        return language;
    }

    private int getRating() {
        int rating = jSlider1.getValue();
        return rating;
    }

    private String getYearPublished() {
        String year = " ";
        switch (yearPublished.getSelectedIndex()) {
            case 1 ->
                year = (String) yearPublished.getSelectedItem();
            case 2 ->
                year = (String) yearPublished.getSelectedItem();
            case 3 ->
                year = (String) yearPublished.getSelectedItem();
            case 4 ->
                year = (String) yearPublished.getSelectedItem();
            case 5 ->
                year = (String) yearPublished.getSelectedItem();
            case 6 ->
                year = (String) yearPublished.getSelectedItem();
            case 7 ->
                year = (String) yearPublished.getSelectedItem();
            case 8 ->
                year = (String) yearPublished.getSelectedItem();
            case 9 ->
                year = (String) yearPublished.getSelectedItem();
            case 10 ->
                year = (String) yearPublished.getSelectedItem();
            case 11 ->
                year = (String) yearPublished.getSelectedItem();
            case 0 ->
                year = (String) yearPublished.getSelectedItem();
            default -> {
            }
        }
        return year;
    }

    private boolean idChecker() {
        //reading the records.txt file
        String fileName = "records.txt";
        File file = new File(fileName);
        try {
            //getting values from records.txt
            Scanner input = new Scanner(file);
            //iterating through the records
            while (input.hasNext()) {
                String data = input.next();
                String[] values = data.split(",");
                int bookId = Integer.parseInt(values[0]);
                //checking the value of bookID
                if (bookId == getBookId()) {
                    idChecker = true;
                }
            }
        } catch (FileNotFoundException | NumberFormatException e) {
            JOptionPane.showMessageDialog(frame,"File Not Found");
        }
        return idChecker;
    }

    private void fileWriter() {
        String filepath = "records.txt";
        //Calling the SaveRecords method from MenuInfoClass
        MenuInfoClass.saveRecords(getBookId(), getBookName(), getAuthorName(), getPrice(), getCategory(), getGenre(), getLanguage(), getYearPublished(), getRating(), filepath);
        JOptionPane.showMessageDialog(frame, "Information has been Stored");
    }
    //clear method to clear the data in data insertion form
    private void clear() {
        bookIDs.setText(null);
        bookNames.setText(null);
        author.setText(null);
        prices.setText(null);
        genres.setSelectedIndex(0);
        languages.setSelectedIndex(0);
        yearPublished.setSelectedIndex(0);
        buttonGroup1.clearSelection();
        jSlider1.setValue(0);
    }

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String required = "*Required";
        //cValidation of all fields
        if (!getBook().isEmpty()) {
            if (!getBookName().isEmpty()) {
                if (!getAuthorName().isEmpty()) {
                    if (!getBookPrice().isEmpty()) {
                        if (!getCategory().isEmpty()) {
                            if (!"Select".equals(getGenre())) {
                                if (!"Select".equals(getLanguage())) {
                                    if (!"Year".equals(getYearPublished())) {
                                        if (idChecker() == false) {
                                            fileWriter();
                                        } else {
                                            JOptionPane.showMessageDialog(frame, "BookID has already been stored");
                                        }

                                    } else {
                                        jLabel17.setText(required);
                                        JOptionPane.showMessageDialog(frame, "Please Fill all the fields");
                                    }
                                } else {
                                    jLabel14.setText(required);
                                    JOptionPane.showMessageDialog(frame, "Please Fill all the fields");
                                }
                            } else {
                                jLabel13.setText(required);
                                JOptionPane.showMessageDialog(frame, "Please Fill all the fields");
                            }
                        } else {
                            jLabel12.setText(required);
                            JOptionPane.showMessageDialog(frame, "Please Fill the category field");
                        }

                    } else {
                        jLabel11.setText(required);
                        JOptionPane.showMessageDialog(frame, "Please Fill all the fields");
                    }
                } else {
                    jLabel10.setText(required);
                    JOptionPane.showMessageDialog(frame, "Please Fill all the fields");
                }
            } else {
                jLabel9.setText(required);
                JOptionPane.showMessageDialog(frame, "Please Fill all the fields");
            }
        } else {
            jLabel8.setText(required);
            JOptionPane.showMessageDialog(frame, "Please Fill all the  fields");
        }
    }//GEN-LAST:event_addActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        clear();
        idChecker = false;
    }//GEN-LAST:event_clearActionPerformed

    private void searchBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBooksActionPerformed
        // TODO add your handling code here:
        //instantiating the SearchBooks class 
        SearchBooks sb = new SearchBooks();
        sb.setVisible(true);
        sb.buttons();
    }//GEN-LAST:event_searchBooksActionPerformed

    private void displayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayActionPerformed
        //instating the display class
        Display dp = new Display();
        dp.dataExtraction();
        dp.setVisible(true);
    }//GEN-LAST:event_displayActionPerformed

    private void bookIDsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bookIDsKeyPressed
        //validating the textField; let's only integer values to the textField1
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || evt.getKeyCode() == 8) {
            bookIDs.setEditable(true);
            jLabel8.setText(" ");
        } else {
            bookIDs.setEditable(false);
            jLabel8.setText("Invalid key pressed");
        }
        idChecker = false;
    }//GEN-LAST:event_bookIDsKeyPressed

    private void bookNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNamesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookNamesActionPerformed

    private void bookNamesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bookNamesKeyPressed
        //validating the textField; let's only String values to the textField2
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || evt.getKeyCode() == 32) {
            bookNames.setEditable(false);
            jLabel9.setText("Invalid key pressed");
        } else {
            bookNames.setEditable(true);
            jLabel9.setText(" ");
        }
    }//GEN-LAST:event_bookNamesKeyPressed

    private void authorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_authorKeyPressed
        //validating the textField; let's only string values to the textField3
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || evt.getKeyCode() == 32) {
            author.setEditable(false);
            jLabel10.setText("Invalid key pressed");
        } else {
            author.setEditable(true);
            jLabel10.setText(" ");
        }
    }//GEN-LAST:event_authorKeyPressed

    private void pricesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pricesKeyPressed
        //validating the textField; let's only double values to the textField4
        char c = evt.getKeyChar();
        if (Character.isDigit(c) || evt.getKeyCode() == 8 || evt.getKeyCode() == 46) {
            String a = prices.getText();
            if (evt.getKeyCode() == 46) {
                if (!(a.contains("."))) {
                    String number = a + ".";
                    prices.setText(number);
                    prices.setEditable(false);
                } else {
                    prices.setEditable(false);
                }
            } else if (Character.isDigit(c) || evt.getKeyCode() == 8) {
                prices.setEditable(true);
            }
            jLabel11.setText(" ");
        } else {
            prices.setEditable(false);
            jLabel11.setText("Invalid key pressed");
        }
    }//GEN-LAST:event_pricesKeyPressed

    private void bookIDsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookIDsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookIDsActionPerformed

    private void genresMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genresMousePressed
        // TODO add your handling code here:
        if (genres.getSelectedIndex() == 0) {
            jLabel13.setText(" ");
        }
    }//GEN-LAST:event_genresMousePressed

    private void languagesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_languagesMousePressed
        // TODO add your handling code here:
        if (languages.getSelectedIndex() == 0) {
            jLabel14.setText(" ");
        }
    }//GEN-LAST:event_languagesMousePressed

    private void yearPublishedMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearPublishedMousePressed
        // TODO add your handling code here:
        if (yearPublished.getSelectedIndex() == 0) {
            jLabel17.setText(" ");
        }
    }//GEN-LAST:event_yearPublishedMousePressed

    private void bookIDsInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_bookIDsInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_bookIDsInputMethodTextChanged

    private void fictionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fictionMousePressed
        // TODO add your handling code here:
        jLabel12.setText("");
    }//GEN-LAST:event_fictionMousePressed

    private void nonFictionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nonFictionMousePressed
        // TODO add your handling code here:
        jLabel12.setText("");
    }//GEN-LAST:event_nonFictionMousePressed

    private void pricesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pricesActionPerformed

    private void viewRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRecordsActionPerformed
        //instantiating the display class
        Display sb = new Display();
        sb.dataExtraction();
        sb.setVisible(true);
    }//GEN-LAST:event_viewRecordsActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        //exiting the whole system
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        // reads the hepl.txt file and displays it 
        try {
            File file = new File("Help.txt");
            file.setReadOnly();
            Desktop desktop = Desktop.getDesktop();
            if (file.exists()) {
                //displays the file
                desktop.open(file);
            }
        } catch (IOException e) {
        }
    }//GEN-LAST:event_helpActionPerformed

    private void bookIDsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookIDsFocusGained
        Border bordered = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 255, 0));
        bookIDs.setBorder(bordered);
    }//GEN-LAST:event_bookIDsFocusGained

    private void bookNamesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookNamesFocusGained
        Border bordered = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 255, 0));
        bookNames.setBorder(bordered);
    }//GEN-LAST:event_bookNamesFocusGained

    private void authorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_authorFocusGained
        Border bordered = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 255, 0));
        author.setBorder(bordered);
    }//GEN-LAST:event_authorFocusGained

    private void pricesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pricesFocusGained
        Border bordered = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 255, 0));
        prices.setBorder(bordered);
    }//GEN-LAST:event_pricesFocusGained

    private void fictionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fictionFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_fictionFocusGained

    private void fictionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fictionMouseEntered
        Border bordered = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 255, 0));
        fiction.setBorder(bordered);
    }//GEN-LAST:event_fictionMouseEntered

    private void nonFictionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonFictionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nonFictionActionPerformed

    private void nonFictionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nonFictionMouseEntered
        Border bordered = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 255, 0));
        nonFiction.setBorder(bordered);
    }//GEN-LAST:event_nonFictionMouseEntered

    private void genresMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genresMouseEntered
        Border bordered = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 255, 0));
        genres.setBorder(bordered);
    }//GEN-LAST:event_genresMouseEntered

    private void languagesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_languagesMouseEntered
        Border bordered = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 255, 0));
        languages.setBorder(bordered);
    }//GEN-LAST:event_languagesMouseEntered

    private void yearPublishedMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearPublishedMouseEntered
        Border bordered = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(0, 255, 0));
        yearPublished.setBorder(bordered);
    }//GEN-LAST:event_yearPublishedMouseEntered

    private void bookIDsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookIDsFocusLost
        bookIDs.setBorder(null);
    }//GEN-LAST:event_bookIDsFocusLost

    private void bookNamesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookNamesFocusLost
        bookNames.setBorder(null);
    }//GEN-LAST:event_bookNamesFocusLost

    private void authorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_authorFocusLost
        author.setBorder(null);
    }//GEN-LAST:event_authorFocusLost

    private void pricesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pricesFocusLost
        prices.setBorder(null);
    }//GEN-LAST:event_pricesFocusLost

    private void fictionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fictionMouseExited
        fiction.setBorder(null);
    }//GEN-LAST:event_fictionMouseExited

    private void languagesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_languagesMouseExited
        languages.setBorder(null);
    }//GEN-LAST:event_languagesMouseExited

    private void yearPublishedMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearPublishedMouseExited
        yearPublished.setBorder(null);
    }//GEN-LAST:event_yearPublishedMouseExited

    private void nonFictionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nonFictionMouseExited
        nonFiction.setBorder(null);
    }//GEN-LAST:event_nonFictionMouseExited

    private void genresMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genresMouseExited
        genres.setBorder(null);
    }//GEN-LAST:event_genresMouseExited

    private void jMenu3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseEntered
        jMenu3.setForeground(Color.red);
    }//GEN-LAST:event_jMenu3MouseEntered

    private void jMenu3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseExited
        jMenu3.setForeground(Color.BLACK);
    }//GEN-LAST:event_jMenu3MouseExited

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
       System.exit(0);
    }//GEN-LAST:event_jMenu3MouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataInsertion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DataInsertion().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JButton add;
    private javax.swing.JTextField author;
    private javax.swing.JTextField bookIDs;
    private javax.swing.JTextField bookNames;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clear;
    private javax.swing.JButton display;
    private javax.swing.JRadioButton fiction;
    private javax.swing.JComboBox<String> genres;
    private javax.swing.JMenuItem help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JComboBox<String> languages;
    private javax.swing.JRadioButton nonFiction;
    private javax.swing.JTextField prices;
    private javax.swing.JMenuItem searchBooks;
    private javax.swing.JMenuItem viewRecords;
    private javax.swing.JComboBox<String> yearPublished;
    // End of variables declaration//GEN-END:variables
}
